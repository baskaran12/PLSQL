truncate table stg2_charge_grp_test;
insert into stg2_charge_grp_test  select * from stg2_charge_grp_bkp_test;
truncate table stg2_crd_test;
insert into stg2_crd_test select * from stg2_crd_test_bkp;
truncate table stg2_pmt_test;
insert into stg2_pmt_test  select * from stg2_pmt_test_bkp;
truncate table stg2_cdl_test;
insert into stg2_cdl_test  select * from stg2_cdl_test_bkp;

declare 
 l_init_amt      NUMBER;
   l_curr_due      NUMBER;
   l_trans         VARCHAR (100);
   l_over_alloc    NUMBER;
   l_alloc         NUMBER := 0;
   l_credit_id     VARCHAR (1000);
   c1              VARCHAR (10) := 'I';
   c2              VARCHAR (30);
   c3              VARCHAR (10) := NULL;
   c4              NUMBER;
   c5              NUMBER;
   c6              VARCHAR (10) := 'C';
   l_cdl_crd       VARCHAR (10);
   l_date          DATE;
   l_credit_type   VARCHAR (10);
BEGIN
   FOR j IN (SELECT ACCOUNT_NAME,
                    PAYMENT_ID,
                    RECEIPT_NR,                   
                    PAYMENT_RECEIVED_DATE,
                    INVOICE_ID,
                    SEQNR,                  
                    RECEIVABLE_TYPE_ID,                           
                    CURRENT_DUE_1,
                    current_due,
                    previous_due,                   
                    ADJUSTMENT_RECEIVED_DATE,
                    INVOICE_DUE_DATE,
                    CHARGE_GROUP_AMOUNT,
                    INVOICE_STATUS_DATE,
                    INVOICE_DATE,
                    ADJUSTMENT_ID,
                    DESCRIPTION,
                    ADJUSTMENT_NR,
                    RNK
               FROM FINANCE_DEBIT_INPUT_TEMP ---where ADJUSTMENT_NR='SGA8990355'
                 )
                                            
   LOOP
IF j.rnk = 1
      THEN
         l_init_amt := j.CHARGE_GROUP_AMOUNT;
         l_curr_due := j.CURRENT_DUE ;

          
          ---DBMS_OUTPUT.PUT_LINE('l_trans1'||' '||j.adjustment_id||' '||j.current_due ||' '|| j.previous_due||j.CURRENT_DUE_1 );
          
         IF j.current_due > j.previous_due
         THEN
            l_init_amt := (l_init_amt + (j.CURRENT_DUE_1 - j.previous_due));
            l_curr_due := (l_curr_due + (j.CURRENT_DUE_1 - j.PREVIOUS_DUE));
           
           
            UPDATE stg2_charge_grp_test
               
               SET charge_group_amount = l_init_amt,
                   current_due = l_curr_due,
                   modified_dts = SYSTIMESTAMP
                 
             WHERE     invoice_id = j.INVOICE_ID
                   AND charge_group = j.RECEIVABLE_TYPE_ID;

         ELSE
          
            IF j.PAYMENT_ID IS NOT NULL
            THEN
               l_trans := 'P';
            ELSIF j.ADJUSTMENT_ID IS NOT NULL
            THEN
               l_trans := 'A';
            ELSE
               l_trans := 'I';
            END IF;


            l_over_alloc := 0;
            l_alloc := (j.PREVIOUS_DUE - j.CURRENT_DUE);
            l_curr_due := l_curr_due - l_alloc;
            c2 := j.INVOICE_ID;
            c4 := j.RECEIVABLE_TYPE_ID;
            c5 := j.SEQNR;
            l_credit_id := c2 || c3 || c4 || c3 || c5 || c6;
                                
                                
                                
                                
                                 

            IF l_curr_due < 0
            THEN
               l_over_alloc := (0 - l_curr_due);
               l_curr_due := 0;
               l_alloc := l_alloc - l_over_alloc;
            END IF;

            IF l_trans = 'P'
            THEN
               MERGE INTO stg2_pmt_test tgt
                       
                                
                    USING (SELECT j.ACCOUNT_NAME AS account_name,
                                  j.PAYMENT_ID AS payment_id,
                                  j.RECEIPT_NR AS payment_nr,
                                  j.PAYMENT_RECEIVED_DATE AS recd_date,
                                  l_alloc AS amount,
                                  NULL excess_amount,
                                  SYSTIMESTAMP AS modified_dts
                             FROM DUAL) src
                                  
                       
                       ON (    tgt.account_name = src.account_name
                           AND tgt.payment_id = src.payment_id
                           AND tgt.payment_nr = src.payment_nr)
               WHEN MATCHED
               THEN
                  UPDATE SET
                     tgt.amount = tgt.amount + src.amount,
                     tgt.modified_dts = src.modified_dts
               WHEN NOT MATCHED
               THEN
                  INSERT     (account_name,
                              payment_id,
                              payment_nr,
                              recd_date,
                              amount,
                              excess_amount)
                      
                      VALUES (src.account_name,
                              src.payment_id,
                              src.payment_nr,
                              src.recd_date,
                              src.amount,
                              src.excess_amount);
            ELSIF l_trans = 'A'
            THEN
            begin 
            ---DBMS_OUTPUT.PUT_LINE('l_trans'||'j.ACCOUNT_NAME:'||j.ACCOUNT_NAME||'j.DESCRIPTION:'||j.DESCRIPTION||'l_alloc:'||l_alloc||'j.ADJUSTMENT_RECEIVED_DATE:'||j.ADJUSTMENT_RECEIVED_DATE||'j.adjustment_id:'||j.adjustment_id);
              MERGE INTO stg2_crd_test tgt                   
                                
                    USING (SELECT j.ACCOUNT_NAME account_name,
                                  j.ADJUSTMENT_ID credit_id,
                                  j.ADJUSTMENT_NR credit_nr,
                                  NULL invoice_id,
                                  j.ADJUSTMENT_RECEIVED_DATE recd_date,
                                  j.DESCRIPTION credit_reason,
                                  'A' AS TYPE,
                                  l_alloc amount,
                                  NULL excess_amount,
                                  SYSDATE--SYSTIMESTAMP 
                                  AS modified_dts
                              FROM dual) src
                                  
                       
                       ON (    tgt.account_name = src.account_name
                           AND tgt.credit_id = src.credit_id
                           AND tgt.credit_nr = src.credit_nr)
               WHEN MATCHED
               THEN
                  UPDATE SET
                     tgt.amount = tgt.amount + src.amount,
                 
                     tgt.modified_dts = src.modified_dts
               WHEN NOT MATCHED
               THEN
                  INSERT     (account_name,
                              credit_id,
                              credit_nr,
                              invoice_id,
                              recd_date,
                              credit_reason,
                              TYPE,
                              amount,
                              excess_amount)
                      
                      VALUES (src.account_name,
                              src.credit_id,
                              src.credit_nr,
                              src.invoice_id,
                              src.recd_date,
                              src.credit_reason,
                              src.TYPE,
                              src.amount,
                              src.excess_amount);
                              
                             ----- DBMS_OUTPUT.PUT_LINE('l_trans'||' '||j.adjustment_id||' '||j.current_due ||' '|| j.previous_due||j.CURRENT_DUE_1 );
                              exception 
                              when others then 
                              insert into exp_test (ACCOUNT_NAME ,ADJUSTMENT_NR,AMOUNT,INVOICE_ID)
                              values(j.ACCOUNT_NAME,j.ADJUSTMENT_NR,l_alloc,1);
                              commit;
                              end;
                              

                       
            ELSE
               MERGE INTO stg2_crd_test tgt
                       
                                
                    USING (SELECT j.ACCOUNT_NAME account_name,
                                  l_credit_id credit_id,
                                  l_credit_id credit_nr,
                                  NULL invoice_id,
                                  j.INVOICE_DATE recd_date,
                                  NULL credit_reason,
                                  'I' TYPE,
                                  l_over_alloc amount,
                                  l_over_alloc excess_amount,
                                  SYSTIMESTAMP AS modified_dts
                             FROM DUAL) src
                                  
                       
                       ON (    tgt.account_name = src.account_name
                           AND tgt.credit_id = src.credit_id)
               WHEN MATCHED
               THEN
                  UPDATE SET
                     tgt.amount = tgt.amount + src.amount,
                     tgt.excess_amount = tgt.excess_amount + src.amount,
                 
                     tgt.modified_dts = src.modified_dts
               WHEN NOT MATCHED
               THEN
                  INSERT     (account_name,
                              credit_id,
                              credit_nr,
                              invoice_id,
                              recd_date,
                              credit_reason,
                              TYPE,
                              amount,
                              excess_amount)
                      
                      VALUES (src.account_name,
                              src.credit_id,
                              src.credit_nr,
                              src.invoice_id,
                              src.recd_date,
                              src.credit_reason,
                              src.TYPE,
                              src.amount,
                              src.excess_amount);

               COMMIT;
            END IF;

            IF l_over_alloc > 0
            THEN
               MERGE INTO stg2_crd_test tgt
                       
                                
                    USING (SELECT j.ACCOUNT_NAME account_name,
                                  l_credit_id credit_id,
                                  l_credit_id credit_nr,
                                  NULL invoice_id,
                                  j.INVOICE_DATE recd_date,
                                  NULL credit_reason,
                                  'I' TYPE,
                                  l_over_alloc amount,
                                  l_over_alloc excess_amount,
                                  SYSTIMESTAMP AS modified_dts
                             FROM DUAL) src
                                  
                       
                       ON (    tgt.account_name = src.account_name
                           AND tgt.credit_id = src.credit_id)
               WHEN MATCHED
               THEN
                  UPDATE SET
                     tgt.amount = tgt.amount + src.amount,
                     tgt.excess_amount = tgt.excess_amount + src.amount,
                     tgt.modified_dts = src.modified_dts
               WHEN NOT MATCHED
               THEN
                  INSERT     (account_name,
                              credit_id,
                              credit_nr,
                              invoice_id,
                              recd_date,
                              credit_reason,
                              TYPE,
                              amount,
                              excess_amount)
                      
                      VALUES (src.account_name,
                              src.credit_id,
                              src.credit_nr,
                              src.invoice_id,
                              src.recd_date,
                              src.credit_reason,
                              src.TYPE,
                              src.amount,
                              src.excess_amount);
                END if;
                       
               IF l_trans = 'P'
               THEN
                  l_cdl_crd := j.RECEIPT_NR;
                  l_date := j.PAYMENT_RECEIVED_DATE;
                  l_credit_type := 'P';
               ELSIF l_trans = 'A'
               THEN
                  l_cdl_crd := j.ADJUSTMENT_NR;
                  l_date := j.ADJUSTMENT_RECEIVED_DATE;
                  l_credit_type := 'C';
               ELSE
                  l_cdl_crd := l_credit_id;
                  l_date := j.INVOICE_DATE;
                  l_credit_type := 'C';
               END IF;
               
               --END IF

               INSERT INTO stg2_cdl_test (ACCOUNT_NAME,
                                          INVOICE_ID,
                                          CREDIT_ID,
                                          CREDIT_TYPE,
                                          DEBIT_TYPE,
                                          AMOUNT,
                                          RECD_DATE)
                  SELECT J.ACCOUNT_NAME account_name,
                         J.INVOICE_ID invoice_id,
                         l_cdl_crd credit_id,
                         l_credit_type credit_type,
                         'DBT' debit_type,
                         l_alloc amount,
                         l_date recd_date
                    FROM DUAL;
                             

               COMMIT;
                                      
                   
                                                     
                                                  
                                               
                     
                                             
                                                            

               UPDATE stg2_charge_grp_test
                  SET charge_group_amount = l_init_amt,
                      current_due = j.CURRENT_DUE,
                      modified_dts = SYSTIMESTAMP
                WHERE     invoice_id = J.INVOICE_ID
                      AND charge_group = J.RECEIVABLE_TYPE_ID;

               COMMIT;
           -- END IF;  
            
            
            END IF; 
 ELSE
        l_init_amt := j.charge_group_amount;
        l_curr_due := j.current_due;
        IF j.current_due > j.previous_due THEN
            NULL;
        ELSE
            IF j.payment_id IS NOT NULL THEN
                l_trans := 'P';
            ELSIF j.adjustment_id IS NOT NULL THEN
                l_trans := 'A';
            ELSE
                l_trans := 'I';
            END IF;

            l_over_alloc := 0;
            l_alloc := ( j.previous_due - j.current_due );
            l_curr_due := l_curr_due - l_alloc;
            c2 := j.invoice_id;
            c4 := j.receivable_type_id;
            c5 := j.seqnr;
            l_credit_id := c2
                           || c3
                           || c4
                           || c3
                           || c5
                           || c6;

            IF l_curr_due < 0 THEN
                l_over_alloc := ( 0 - l_curr_due );
                l_curr_due := 0;
                l_alloc := l_alloc - l_over_alloc;
            END IF;

            IF l_trans = 'P' THEN
                MERGE INTO stg2_pmt_test tgt
                USING (
                          SELECT
                              j.account_name            AS account_name,
                              j.payment_id              AS payment_id,
                              j.receipt_nr              AS payment_nr,
                              j.payment_received_date   AS recd_date,
                              l_alloc                   AS amount,
                              NULL excess_amount,
                              systimestamp              AS modified_dts
                          FROM
                              dual
                      )
                src ON ( tgt.account_name = src.account_name
                         AND tgt.payment_id = src.payment_id
                         AND tgt.payment_nr = src.payment_nr )
                WHEN MATCHED THEN UPDATE
                SET tgt.amount = tgt.amount + src.amount --l_alloc
                ,
                    tgt.modified_dts = src.modified_dts
                WHEN NOT MATCHED THEN
                INSERT (
                    account_name,
                    payment_id,
                    payment_nr,
                    recd_date,
                    amount,
                    excess_amount )
                VALUES
                    ( src.account_name,
                      src.payment_id,
                      src.payment_nr,
                      src.recd_date,
                      src.amount,
                      src.excess_amount );

                COMMIT;
            ELSIF l_trans = 'A' THEN
            begin
                MERGE INTO stg2_crd_test tgt
                USING (
                          SELECT
                              j.account_name               AS account_name,
                              j.adjustment_id              AS credit_id,
                              j.adjustment_nr              AS credit_nr,
                              NULL invoice_id,
                              j.adjustment_received_date   AS recd_date,
                              j.description                AS credit_reason,
                              'A' AS type,
                              l_alloc                      AS amount,
                              NULL excess_amount,
                              systimestamp                 AS modified_dts
                          FROM
                              dual
                      )
                src ON ( tgt.account_name = src.account_name
                         AND tgt.credit_id = src.credit_id
                         AND tgt.credit_nr = src.credit_nr )
                WHEN MATCHED THEN UPDATE
                SET tgt.amount = tgt.amount + src.amount --l_alloc
                ,
                    tgt.modified_dts = src.modified_dts
                WHEN NOT MATCHED THEN
                INSERT (
                    account_name,
                    credit_id,
                    credit_nr,
                    invoice_id,
                    recd_date,
                    credit_reason,
                    type,
                    amount,
                    excess_amount )
                VALUES
                    ( src.account_name,
                      src.credit_id,
                      src.credit_nr,
                      src.invoice_id,
                      src.recd_date,
                      src.credit_reason,
                      src.type,
                      src.amount,
                      src.excess_amount );
                      exception 
                              when others then 
                              insert into exp_test (ACCOUNT_NAME ,ADJUSTMENT_NR,AMOUNT)
                              values(j.ACCOUNT_NAME,j.ADJUSTMENT_NR,2);
                              commit;
                              end;

                COMMIT;
            ELSE
                NULL;
            END IF;

            IF l_trans = 'P' THEN
                l_cdl_crd := j.receipt_nr;
                l_date := j.payment_received_date;
                l_credit_type := 'P';
            ELSIF l_trans = 'A' THEN
                l_cdl_crd := j.adjustment_nr;
                l_date := j.adjustment_received_date;
                l_credit_type := 'C';
            ELSE
                l_cdl_crd := l_credit_id;
                l_date := j.invoice_date;
                l_credit_type := 'C';
            END IF;

            INSERT INTO stg2_cdl_test (
                account_name,
                invoice_id,
                credit_id,
                credit_type,
                debit_type,
                amount,
                recd_date
            )
                SELECT
                    j.account_name,            --account_name,
                    j.invoice_id,                     --invoice_id,
                    l_cdl_crd,                --credit_id,
                    l_credit_type,                    --credit_type
                    'DBT',                    --debit_type,
                    l_alloc,                     --amount,
                    l_date                    --recd_date
                FROM
                    dual;

            COMMIT;
        END IF;

 END IF;
 end loop;
end;